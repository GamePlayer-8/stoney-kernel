# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Nightly

on:
  push:
    branches: [main]
  workflow_dispatch:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

env:
  DEBIAN_FRONTEND: 'noninteractive'
  TZ: Etc/UTC

jobs:
  vanilla:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 5120
          swap-size-mb: 1024
          remove-dotnet: 'true'
      
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run docker compose
        run: |
            /bin/sh build.sh run vanilla

      - name: Upload kernel
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: kernel
          path: packages/kernel.tar.gz

  vanilla-alpine:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 5120
          swap-size-mb: 1024
          remove-dotnet: 'true'
      
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run docker compose
        run: |
            /bin/sh build.sh run vanilla-alpine

      - name: Upload kernel
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: kernel-alpine
          path: packages/kernel-alpine.tar.gz

  debian:
    runs-on: ubuntu-latest
    needs: [vanilla]

    steps:
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}

      - name: Create directory
        run: |
            mkdir packages

      - name: Download kernel
        uses: actions/download-artifact@v4
        with:
          name: kernel
          path: ./packages

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run docker compose
        run: |
            /bin/sh build.sh run debian

      - name: Upload debian package
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: debian-deb
          path: packages/debian/kernel-debian.deb

  alpine:
    runs-on: ubuntu-latest
    needs: [vanilla-alpine]

    steps:
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}

      - name: Create directory
        run: |
            mkdir packages

      - name: Download kernel
        uses: actions/download-artifact@v4
        with:
          name: kernel-alpine
          path: ./packages

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run docker compose
        run: |
            /bin/sh build.sh run alpine

      - name: Package
        run: |
            sudo apt-get update
            sudo apt-get install -y tar lzop
            cd packages/alpine
            sudo tar --lzop -cvf alpine-apk.tar.lzo keys pkg
            sudo chown -R $USER:$USER alpine-apk.tar.lzo

      - name: Upload alpine package
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: alpine-apk
          path: packages/alpine/alpine-apk.tar.lzo

  publish:
    runs-on: ubuntu-latest
    needs: [debian, alpine]

    steps:
      - name: Download Debian Deb
        uses: actions/download-artifact@v4
        with:
          name: debian-deb
          path: .
          
      - name: Download Alpine Apk
        uses: actions/download-artifact@v4
        with:
          name: alpine-apk
          path: .
      
      - name: Download Debian kernel
        uses: actions/download-artifact@v4
        with:
          name: kernel
          path: .
      
      - name: Download Alpine kernel
        uses: actions/download-artifact@v4
        with:
          name: kernel-alpine
          path: .

      - name: Publish release
        uses: notpeelz/action-gh-create-release@v5.0.1
        with:
          target: ${{ inputs.target }}
          tag: nightly
          prerelease: true
          strategy: replace
          title: "Automatic build"
          body: "Automatic build"
          files: |
            kernel-debian.deb
            alpine-apk.tar.lzo
            kernel.tar.gz
            kernel-alpine.tar.gz

